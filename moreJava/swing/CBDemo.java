//demonstrate checkboxes

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

class CBDemo implements ItemListener {

  JLabel jlabSelected;
  JLabel jlabChanged;
  JCheckBox jcbAlpha;
  JCheckBox jcbBeta;
  JCheckBox jcbGamma;

  CBDemo() {
    //create new JFrame container;
    JFrame jfrm = new JFrame("Demonstarte checkboxes");

    //specify flowlayoout
    jfrm.setLayout(new FlowLayout());

    //give frm initial setSize
    jfrm.setSize(280, 120);

    //Terminate the program when the user closes the Application
    jfrm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    //create empty labels
    jlabSelected = new JLabel("");
    jlabChanged = new JLabel("");

    //make check boxes
    jcbAlpha = new JCheckBox("Alpha");
    jcbBeta = new JCheckBox("Beta");
    jcbGamma = new JCheckBox("Gamma");

    //events generated by checkboxes are handled in common by the iteStateChanged()
    //method implemented by CBDemo
    jcbAlpha.addItemListener(this);
    jcbBeta.addItemListener(this);
    jcbGamma.addItemListener(this);

    //add checkboxes and labels to the content pane
    jfrm.add(jcbAlpha);
    jfrm.add(jcbBeta);
    jfrm.add(jcbGamma);
    jfrm.add(jlabChanged);
    jfrm.add(jlabSelected);

    //display the frame
    jfrm.setVisible(true);
  }

  //this handler for checkboxes
  public void itemStateChanged(ItemEvent ie) {
    String str = "";

    //obtain a refernce to the check box that caused the events
    JCheckBox cb = (JCheckBox) ie.getItem();

    //report that checkbox changed;
    if(cb.isSelected())
      jlabChanged.setText(cb.getText() + " was just selected.");
    else
      jlabChanged.setText(cb.getText() + " was just cleared.");

    //report all selected boxes
    if(jcbAlpha.isSelected())  str += "Alpha ";
    if(jcbBeta.isSelected()) str += "Beta ";
    if(jcbGamma.isSelected()) str += "Gamma ";

    jlabSelected.setText("Selected check boxes: " + str);
  }

  public static void main(String args[])
  {
    //crate frame on event dispatching thread
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        new CBDemo();
      }
    });
  }
}
